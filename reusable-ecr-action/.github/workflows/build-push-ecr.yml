name: Build and Push Docker to ECR

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      ecr-repository:
        required: true
        type: string
      image-tag:
        required: true
        type: string
      dockerfile:
        required: false
        default: Dockerfile
        type: string
      context:
        required: false
        default: .
        type: string
      build-args:
        required: false
        type: string
        default: ''
    secrets:
      AWS_ROLE_TO_ASSUME:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        env:
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REPOSITORY: ${{ inputs.ecr-repository }}
          TAG: ${{ inputs.image-tag }}
          DOCKERFILE: ${{ inputs.dockerfile }}
          CONTEXT: ${{ inputs.context }}
          BUILD_ARGS: ${{ inputs['build-args'] }}
          REGION: ${{ inputs.aws-region }}
        run: |
          repo="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPOSITORY"
          image="$repo:$TAG"
          args=""
          if [ -n "$BUILD_ARGS" ]; then
            while IFS= read -r line; do
              args="$args --build-arg $line"
            done <<< "$BUILD_ARGS"
          fi
          echo "Building image $image"
          docker build -f "$DOCKERFILE" $args -t "$image" "$CONTEXT"
          docker push "$image"
